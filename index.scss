@import "compass/utilities/general/clearfix";

$font-size: 14px;
$split: 300px;
$gutter: 10px;
$border-radius: $gutter / 2;
$border-radius-mini: $gutter / 3;

$duration: 250ms;
$timing-function: ease-in-out;

$button-width: 110px;
$button-width-panel: 90px;
$button-width-controls: 110px;
$button-width-scale: 90px;
$button-width-help: 50px;
$button-width-orientation-landscape: 90px;
$button-width-orientation-portrait: 70px;

$control-height: $font-size * 2;

$cursor-gutter: 6px;
$cursor-input-width: 66px;
$cursor-handle-width: 20px;
$cursor-height: $control-height + $cursor-gutter * 2;
$cursor-width: $cursor-input-width + $cursor-handle-width + $cursor-gutter * 3;

$box-shadow: 0 0 10px #222;

$blue: #269;
$light-grey: #AAA;
$dark-grey: #777;
$darker-grey: #333;
$panel-bg-color: #E5E5E5;

@mixin blueprint-background {
  background-attachment: fixed;
  background-color: $blue;
  background-image: linear-gradient(rgba(255,255,255,.15) 2px, transparent 2px),
    linear-gradient(0, rgba(255,255,255,.15) 2px, transparent 2px),
    linear-gradient(rgba(255,255,255,.1) 1px, transparent 1px),
    linear-gradient(0, rgba(255,255,255,.1) 1px, transparent 1px);
  background-position: -2px -2px,
    -2px -2px,
    -1px -1px,
    -1px -1px;
  background-size: 100px 100px,
    100px 100px,
    20px 20px,
    20px 20px;
}
@mixin handle-background {
  background-image: linear-gradient(#AAA 1px, transparent 1px),
    linear-gradient(#FFF 1px, transparent 1px);
  background-position: 0 1px, 0 2px;
  background-size: 6px 6px;
}
@mixin simple-button {
  background-color: #EEE;
  background-image: linear-gradient(#FFF, #DDD);
  color: $dark-grey;
  text-shadow: 0 1px 0 #FFF;
}
@mixin button {
  @include simple-button;

  &:hover {
    background-color: #EEE;
    background-image: linear-gradient(#DDD, #FFF);
  }
}
@mixin button-toggled {
  background-color: #808000;
  background-image: linear-gradient(#DAA658, #996A22);
  border-color: #575700;
  color: #FFF;
  text-shadow: 0 -1px 0 $dark-grey;

  &:hover {
    background-color: #808000;
    background-image: linear-gradient(#996A22, #DAA658);
  }
}





/* Global --------------------------------------------------------------------------------------- */

[data-tpl-all] {
  display: none;
}

* {
  box-sizing: border-box;
}

[data-hold="0"] * {
  box-sizing: border-box;
  transition-property: top, left, bottom, right, opacity, transform, color;
  transition-duration: $duration;
  transition-timing-function: $timing-function;
}

body, input, button {
  font: bold $font-size Arial, sans-serif;
}

:focus {
  outline: none;
}

button::-moz-focus-inner,
input[type="reset"]::-moz-focus-inner,
input[type="button"]::-moz-focus-inner,
input[type="submit"]::-moz-focus-inner,
input[type="file"] > input[type="button"]::-moz-focus-inner {
  border: none;
}

h1 {
  font-size: $font-size * 1.5;
  line-height: $control-height;
  left: $gutter;
  margin: 0;
  position: fixed;
  top: 0;
  transform-origin: 0 0;
  width: $button-width;
  
  [data-panel="1"] & {
    color: $blue;
    text-shadow: 0 1px 0 #FFF;
  }
  
  [data-panel="0"][data-controls="1"] & {
    color: #FFF;
    text-shadow: 1px 1px 0 #000;
  }
  
  [data-panel="0"][data-controls="0"] & {
    color: $blue;
    left: 0;
    text-align: center;
    top: $gutter + $button-width;
    transform: rotate(-90deg);
  }
}

button {
  @include button;
  border: 1px solid $light-grey;
  border-radius: $border-radius-mini;
  box-shadow: 0 0 5px -2px #000 inset, 0 1px 0 #FFF;
  color: $dark-grey;
  cursor: pointer;
  line-height: $font-size * 1.5;
  padding: 0 $gutter;
  text-shadow: 0 1px 0 white;
}

#panel,
#playground,
#mask {
  bottom: 0;
  position: fixed;
  top: 0;
}





/* Viewports list ------------------------------------------------------------------------------- */

#panel {
  /* http://subtlepatterns.com/?p=1064 */
  background: url(chruch.png);
  left: 0;
  width: $split;
}

#list {
  bottom: $font-size * 2 + $gutter;
  box-shadow: 0 5px 30px -10px #555555 inset,
    0 -5px 30px -10px #555555 inset;
  left: 0;
  overflow-x: hidden;
  overflow-y: scroll;
  padding: 0 $gutter 0 $gutter;
  position: absolute;
  right: 0;
  top: $font-size * 2 + $gutter;
  
  &::-webkit-scrollbar {
    width: $gutter / 2;
}

  &::-webkit-scrollbar-track {
    border-radius: $gutter;
  }

  &::-webkit-scrollbar-thumb {
    border-radius: $gutter;
    background: $light-grey;
  }
}

.viewport {
  @include clearfix;
  padding: $gutter / 1.5 0;
  position: relative;
  transition: none;
  
  &:not(:last-child) {
    border-bottom: 1px solid #AAA;
  }
  
  &:not(:first-child) {
    border-top: 1px solid white;
  }
  
  .favourite,
  .name,
  .size,
  .details {
    line-height: $font-size * 1.5;
    margin: $gutter / 3 0;
  }
  
  .favourite {
    background: none;
    border: none;
    box-shadow: none;
    cursor: pointer;
    float: left;
    margin-right: $gutter / 2;
    padding: 0;
    text-shadow: 0 0 $gutter / 3 $dark-grey;
    transition: none;
  }
  
  &[data-favourite="1"] .favourite {
    color: #FF0;
  }
  
  &[data-favourite="0"] .favourite {
    color: $panel-bg-color;
  }
  
  .name,
  .size {
    float: left;
    padding: 1px 0;
  }
  
  .name {
    text-shadow: 0 1px 0 #FFF;
    text-overflow: ellipsis;
    transition: none;
    white-space: nowrap;
    width: 150px;
  }
  
  &[data-favourite="1"] .name {
    color: $blue;
  }
  
  &[data-favourite="0"] .name {
    color: $darker-grey;
  }

  .size {
    clear: left;
    color: $darker-grey;
    font-weight: normal;
  }

  .details {
    clear: left;
    color: $dark-grey;
    float: left;
    font-weight: normal;
    margin-top: $gutter;
  }

  .actions {
    position: absolute;
    right: 0;
    top: $gutter / 1.5;
  }

  [data-orientation="landscape"],
  [data-orientation="portrait"] {
    display: block;
    margin: 3px 0;
    width: $button-width-orientation-landscape;
  }
}

[data-orientation="portrait"] .viewport[data-selected="1"] [data-orientation="portrait"],
[data-orientation="landscape"] .viewport[data-selected="1"] [data-orientation="landscape"] {
  @include button-toggled;
}

[data-filter="favourites"] .viewport[data-favourite="0"] {
  height: 0;
  padding: 1px;
}

[data-filter="favourites"] .viewport[data-favourite="0"] > * {
  visibility: hidden;
}

[data-filter="favourites"] .viewport[data-favourite="0"]:first-child,
[data-filter="favourites"] .viewport[data-favourite="0"]:last-child {
  padding: $gutter / 2;
}





/* Viewports filter  ---------------------------------------------------------------------------- */

#filter {
  bottom: 0;
  height: 38px;
  left: 0;
  line-height: 38px;
  position: absolute;
  right: 0;
  text-align: center;
}
  
[data-filter="all"] #filter-all,
[data-filter="favourites"] #filter-favourites {
  @include button-toggled;
}
  
  



/* Playground  ---------------------------------------------------------------------------------- */

#playground {
  box-shadow: $box-shadow;
  overflow: hidden;
  right: 0;
  
  [data-panel="1"] & {
    left: $split;
  }
  
  [data-panel="0"] & {
    left: 0;
  }
  
  [data-controls="1"] & {
    @include blueprint-background;
  }
  
  [data-controls="0"] & {
    background: #FFF;
  }
}





/* Controls  ------------------------------------------------------------------------------------ */

.control {
  border: none;
  border-radius: 0 0 $gutter / 2 $gutter / 2;
  box-shadow: $box-shadow;
  height: $control-height;
  position: fixed;
  top: 0;
}

a.control,
button.control {
  @include button;
  color: $dark-grey;
  cursor: pointer;
  line-height: $control-height;
  padding: 0;
  text-align: center;
  text-decoration: none;
  text-shadow: 0 1px 0 #FFF;
  width: $button-width;
  
      
  &:hover {
    color: #555;
    background-color: #EFEFEF;
    background-image: linear-gradient(#E0E0E0, #FFF);
  }
}

#orientation-landscape {
  left: $gutter * 2 + $button-width;
  width: $button-width-orientation-landscape;
  
  [data-controls="0"] & {
    top: 0 - $control-height - $gutter;
  }
  
  [data-panel="1"] & {
    top: 0 - $control-height - $gutter;
  }

  [data-orientation="landscape"] & {
    @include button-toggled;
  }
}

#orientation-portrait {
  left: $gutter * 3 + $button-width + $button-width-orientation-landscape;
  width: $button-width-orientation-portrait;
  
  [data-controls="0"] & {
    top: 0 - $control-height - $gutter;
  }
  
  [data-panel="1"][data-controls="0"] & {
    left: $split;
  }
  
  [data-panel="1"] & {
    top: 0 - $control-height - $gutter;
  }

  [data-orientation="portrait"] & {
    @include button-toggled;
  }
}

#panel-switch,
#controls-switch {
  transform-origin: 0 0;
  
  [data-controls="0"] & {
    border-radius: 0 0 $border-radius $border-radius;
    left: 0;
    opacity: 0.75;
    transform: rotate(-90deg);
  }
}

#panel-switch {
  width: $button-width-panel;
  
  [data-controls="1"] & {
    left: $split + $gutter;
  }
  
  [data-controls="0"] & {
    top: $gutter * 3 + $button-width + $button-width-controls + $button-width-panel;
  }
  
  [data-panel="1"] & [data-status="0"] {
      display: none;
  }
  
  [data-panel="0"] & [data-status="1"] {
      display: none;
  }
  
  [data-panel="1"][data-controls="0"] & {
    left: $split;
  }
}

#controls-switch {
  width: $button-width-controls;
  
  [data-controls="1"] & {
    left: $split + $gutter * 2 + $button-width-panel;
    
    [data-status="0"] {
        display: none;
    }
  }
  
  [data-controls="0"] & {
    top: $gutter * 2 + $button-width + $button-width-controls;
    
    [data-status="1"] {
        display: none;
    }
  }
  
  [data-panel="1"][data-controls="0"] & {
    left: $split;
  }
}

#url {
  left: $split + $gutter * 3 + $button-width-panel + $button-width-controls;
  right: $gutter * 3 + $button-width-help + $button-width-scale;
  
  [data-controls="0"] & {
    top: 0 - $control-height - $gutter;
  }
  
  &.focused {
    right: $gutter;
  }
  
  input {
    border: none;
    border-radius: 0 0 $gutter / 2 $gutter / 2;
    color: $dark-grey;
    height: 100%;
    padding: 0 $gutter / 2;
    width: 100%;
  }
  
  input:focus {
    color: $darker-grey;
  }
}

#autoscale-switch {
  right: $gutter * 2 + $button-width-help;
  width: $button-width-scale;
  
  [data-controls="0"] & {
    top: 0 - $control-height - $gutter;
  }

  [data-autoscale="1"] & {
    @include button-toggled;
  }
}

#help-link {
  right: $gutter;
  width: $button-width-help;
  
  [data-controls="0"] & {
    top: 0 - $control-height - $gutter;
  }
}





/* Cursors general ------------------------------------------------------------------------------ */

.cursor-area {
  position: absolute;
  
  [data-controls="0"] & {
    opacity: 0;
  }
}

.cursor {
  @include simple-button;
  bottom: 0;
  box-shadow: $box-shadow;
  height: $cursor-height;
  padding: $cursor-gutter / 2;
  position: absolute;
  width: $cursor-width;
  
  &:before {
    color: #EFEFEF;
    text-shadow: none;
    margin: $cursor-gutter / 2;
    position: absolute;
    line-height: $control-height;
  }
}

.cursor input,
.cursor .handle {
  float: left;
  height: $control-height;
}

.cursor input {
  @include blueprint-background;
  border: none;
  box-shadow: $box-shadow inset;
  color: #FFF;
  margin: $cursor-gutter / 2;
  padding: $cursor-gutter / 2;
  text-align: right;
  text-shadow: 1px 1px 0 #000;
  width: $cursor-input-width;
}

.cursor .handle {
  @include handle-background;
  height: $cursor-height - $cursor-gutter * 3;
  margin: $cursor-gutter $cursor-gutter / 2;
  width: $cursor-height / 2;
}





/* Cursors specific ----------------------------------------------------------------------------- */

#scale,
#height {
  bottom: $gutter + $cursor-height + $cursor-height / 2;
  top: $gutter + $control-height + $cursor-height / 2;
  width: $cursor-width;
  
  .cursor {
    bottom: 0;
    margin-bottom: 0 - $cursor-height / 2;
    
    &:before {
      content: '\25B6';
    }
    
    .handle {
      cursor: ns-resize;
    }
  }
}

#scale {
  left: 0;
  
  .cursor {
    border-radius: 0 $border-radius $border-radius 0;
    bottom: 50%;
    
    input {
      border-radius: 0 $border-radius-mini $border-radius-mini 0;
    }
    
    &:before {
      left: $cursor-handle-width + $cursor-gutter;
    }
    
    [data-autoscale="1"] & .handle {
      visibility: hidden;
    }
    
    [data-autoscale="1"] & {
      opacity: 0.5;
    }
  }
}

#height {
  right: 0;
  
  .cursor {
    border-radius: $border-radius 0 0 $border-radius;
    bottom: 50%;
    
    input {
      border-radius: $border-radius-mini 0 0 $border-radius-mini;
    }
    
    &:before {
      left: 0;
    }
  }
}

#width {
  bottom: 0;
  height: $cursor-height;
  left: $gutter + $cursor-width / 2;
  right: $gutter + $cursor-width / 2;
  
  .cursor {
    border-radius: $border-radius $border-radius 0 0;
    left: 50%;
    margin-left: 0 - $cursor-width / 2;
    
    input {
      border-radius: $border-radius-mini $border-radius-mini 0 0;
    }
    
    &:before {
      bottom: 0;
      content: '\25B2';
      color: #DDD;
      left: $cursor-gutter / 2;
      line-height: $control-height / 2;
      margin-bottom: 0;
      text-align: center;
      width: $cursor-input-width;
    }
    
    .handle {
      cursor: ew-resize;
      transform: rotate(-90deg);
    }
  }
}





/* Viewport  ------------------------------------------------------------------------------------ */

#viewport-wrapper {
  border-radius: $gutter;
  position: absolute;
  
  [data-controls="1"] & {
    bottom: $gutter + $cursor-height;
    left: $gutter + $cursor-width;
    right: $gutter + $cursor-width;
    top: $gutter + $control-height;
  }
  
  [data-controls="0"] & {
    bottom: 0;
    left: $gutter + $control-height;
    right: 0;
    top: 0;
  }
}

#viewport {
  animation-duration: $duration * 3;
  animation-iteration-count: 1;
  animation-timing-function: $timing-function;
  border: none;
  box-shadow: $box-shadow;
  left: 50%;
  height: 10px;
  margin: -5px 0 0 -5px;
  position: absolute;
  top: 50%;
  width: 10px;
  
  [data-hold="0"] & {
    transition-delay: $duration * 1.5;
    transition-property: height, width, margin, transform;
  }
  
  [data-orientation="landscape"] & {
    animation-name: rotate-landscape;
  }
  
  [data-orientation="portrait"] & {
    animation-name: rotate-portrait;
  }
}

#chrome {
  background-repeat: no-repeat;
  background-position: center center;
  left: 50%;
  height: 2000px;
  margin: -1000px 0 0 -1000px;
  position: absolute;
  top: 50%;
  transition-duration: $duration * 1.5;
  width: 2000px;
  
  [data-orientation="landscape"] & {
    transform: rotate(90deg);
  }
  
  [data-orientation="portrait"] & {
    transform: rotate(0deg);
  }
}





/* mask ----------------------------------------------------------------------------------------- */

#mask {
  bottom: 0;
  left: 0;
  position: fixed;
  right: 0;
  top: 0;
  
  &.scale-resize, &.height-resize {
    cursor: ns-resize;
  }
  
  &.width-resize {
    cursor: ew-resize;
  }
  
  [data-hold="1"] & {
    display: block;
  }
  
  [data-hold="0"] & {
    display: none;
  }
}

[data-hold="1"] * {
  user-select: none;
}





/* sad-face ------------------------------------------------------------------------------------- */

#sad-face {
  background: #FFF;
  bottom: 0;
  color: $blue;
  display: none;
  left: 0;
  position: fixed;
  right: 0;
  text-align: center;
  top: 0;
  
  .message {
    font-size: 28px;
    height: 136px;
    left: 0;
    line-height: 34px;
    margin-top: -72px;
    position: absolute;
    right: 0;
    top: 50%;
  }
  
  .min-size {
    color: $darker-grey;
  }
}

@media screen and (max-height: 349px),
screen and (max-width: 799px) {
  #sad-face {
    display: block;
  }
}





/* z-index -------------------------------------------------------------------------------------- */

#sad-face {
  z-index: 80;
}

#mask {
  z-index: 70;
}

h1 {
  z-index: 60;
}

#url {
  z-index: 51;
}

.control, .cursor {
  z-index: 50;
}

#playground {
  z-index: 45;
}

#viewport {
  z-index: 40;
}

#chrome {
  z-index: 30;
}

#panel {
  z-index: 20;
}





/* animations ----------------------------------------------------------------------------------- */

@keyframes 'rotate-landscape' {
  from {
    transform: rotate(0deg);
  }
  50% {
    transform: rotate(90deg);
  }
  to {
    transform: rotate(0deg);
  }
}​

.keyframes-bug{}

@keyframes 'rotate-portrait' {
  from {
    transform: rotate(0deg);
  }
  50% {
    transform: rotate(-90deg);
  }
  to {
    transform: rotate(0deg);
  }
}​

.keyframes-bug{}